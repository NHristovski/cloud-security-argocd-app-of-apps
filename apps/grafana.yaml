apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  sources:
  - repoURL: https://grafana.github.io/helm-charts
    chart: grafana
    targetRevision: 8.13.1
    helm:
      values: |
        envFromSecret: grafana-oidc-client-secret
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Prometheus
                type: prometheus
                url: http://prometheus-server.monitoring.svc.cluster.local
                access: proxy
                isDefault: true
              - name: loki-project001
                access: proxy
                type: loki
                url: http://nginx-loki-proxy.monitoring.svc.cluster.local:80
                basicAuth: true
                basicAuthUser: project001
                secureJsonData:
                  basicAuthPassword: $__file{/etc/secrets/PROJECT001_PASSWORD}                
        dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
              - name: "default"
                orgId: 1
                folder: ""
                type: file
                disableDeletion: false
                editable: true
                options:
                  path: /var/lib/grafana/dashboards/default
        dashboards:
          default:
            kubernetes:
              gnetId: 10000
              revision: 1
              datasource: Prometheus
        grafana.ini:
          server:
            domain: https://grafana.127.0.0.1.sslip.io/
            root_url: https://grafana.127.0.0.1.sslip.io/
          auth.generic_oauth:
            enabled: true
            name: KEYCLOAK  
            allow_sign_up: true
            client_id: grafana 
            client_secret: ${OAUTH_CLIENT_SECRET}
            scopes: openid email profile offline_access roles
            email_attribute_path: email
            login_attribute_path: username
            name_attribute_path: full_name
            auth_url: https://keycloak.127.0.0.1.sslip.io/realms/grafana/protocol/openid-connect/auth
            token_url: http://keycloak.keycloak.svc.cluster.local:80/realms/grafana/protocol/openid-connect/token
            api_url: http://keycloak.keycloak.svc.cluster.local:80/realms/grafana/protocol/openid-connect/userinfo
            signout_redirect_url: https://keycloak.127.0.0.1.sslip.io/realms/grafana/protocol/openid-connect/logout
            role_attribute_path: contains(realm_access.roles[*], 'GrafanaSuperadmin') && 'GrafanaAdmin' || contains(realm_access.roles[*], 'GrafanaAdmin') && 'Admin' || contains(realm_access.roles[*], 'GrafanaEditor') && 'Editor' || 'Viewer'
            role_attribute_strict: true
            allow_assign_grafana_admin: true 
          auth:
            disable_login_form: true
            oauth_auto_login: false
            oauth_skip_org_role_update_sync: false
            skip_org_role_sync: false
          users:
            auto_assign_org: true
            auto_assign_org_role: Viewer
            auto_assign_org_id: 1
          security:
            disable_initial_admin_creation: true
            allow_embedding: true
            cookie_secure: false
        ingress:
          enabled: true          
          ingressClassName: traefik
          
          annotations: 
            cert-manager.io/cluster-issuer: vault-issuer
            traefik.ingress.kubernetes.io/router.middlewares: monitoring-secure-access@kubernetescrd
            
          path: /
          pathType: Prefix
          hosts:
            - grafana.127.0.0.1.sslip.io

          tls: 
            - secretName: grafana-tls
              hosts:
                - grafana.127.0.0.1.sslip.io
        extraSecretMounts:
          - name: loki-datasource-secret
            secretName: loki-datasource-secret
            mountPath: /etc/secrets
            readOnly: true
        extraConfigmapMounts:
          - name: istio-dashboard-configmap
            mountPath: /var/lib/grafana/dashboards/default/istio.json
            subPath: "istio.json" 
            configMap: istio-dashboard
            readOnly: true
  syncPolicy:
    managedNamespaceMetadata:
      labels:
        istio-injection: enabled
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

